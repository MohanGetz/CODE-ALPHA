import random

# List of words to choose from
word_list = ["python", "hangman", "computer", "programming", "developer", "algorithm", "code"]

# Hangman states
hangman_states = [
    '''
       -----
       |   |
           |
           |
           |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
           |
           |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
       |   |
           |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
      /|   |
           |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
      /|\\  |
           |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
      /|\\  |
      /    |
           |
    =========
    ''',
    '''
       -----
       |   |
       O   |
      /|\\  |
      / \\  |
    =========
    '''
]

# Function to display the current state of the word
def display_word(word, guessed_letters):
    return ''.join([letter if letter in guessed_letters else '_' for letter in word])

# Function to display hangman state based on incorrect guesses
def display_hangman(incorrect_guesses):
    print(hangman_states[incorrect_guesses])

# Function to play the Hangman game
def play_hangman():
    word = random.choice(word_list)
    guessed_letters = set()
    incorrect_guesses = 0
    max_incorrect_guesses = 6

    print("Welcome to Hangman!")
    print(f"The word has {len(word)} letters.")
    
    while incorrect_guesses < max_incorrect_guesses:
        display_hangman(incorrect_guesses)
        print("\nWord to guess: ", display_word(word, guessed_letters))
        print(f"Incorrect guesses left: {max_incorrect_guesses - incorrect_guesses}")

        guess = input("Guess a letter: ").lower()

        if len(guess) != 1 or not guess.isalpha():
            print("Please enter a valid single letter.")
            continue

        if guess in guessed_letters:
            print("You've already guessed that letter!")
            continue

        guessed_letters.add(guess)

        if guess in word:
            print(f"Good guess! The letter '{guess}' is in the word.")
        else:
            incorrect_guesses += 1
            print(f"Oops! The letter '{guess}' is not in the word.")

        if all(letter in guessed_letters for letter in word):
            print(f"Congratulations! You've guessed the word: {word}")
            break
    else:
        print(f"Sorry, you've run out of guesses. The word was: {word}")

# Function to ask if the player wants to play again
def ask_to_play_again():
    play_again = input("Do you want to play again? (y/n): ").lower()
    return play_again == "y"

# Main loop to run the game
def main():
    while True:
        play_hangman()
        if not ask_to_play_again():
            print("Thanks for playing!")
            break

if __name__ == "__main__":
    main()
